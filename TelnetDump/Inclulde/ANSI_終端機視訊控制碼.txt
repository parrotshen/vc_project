2.0.2、ANSI 終端機視訊控制碼

    ANSI (American National Standard Institute) 視訊控制碼為美國
國家標準機構所制定的規格，目前大部份作業系統皆有支援此項標準，
例如 MS-DOS 系統即以設備驅動器 ANSI.SYS 的形式供使用者選擇性安裝
，透過 ANSI 標準視訊控制碼可直接控制螢幕的顯示模式、游標位置、
字元屬性 (顏色) 、清除螢幕部份或全部區域等等，較新的版本 (如 ANSI
Standard X3.64) 所支援功能更多、更廣，並且與舊版標準完全相容，目前
大部份的數據機撥接式電子佈告系統 (BBS) 皆採用 ANSI 視訊控制碼。
    所有 ANSI 控制碼的引導碼 (introducer) 為 ESC [，此兩個字元又
稱為 ANSI 的脫離字元 (escape character) ，意即，在連續的文書資料中
，當遇到此兩個字元時，即表示接下來的字元是 ANSI 的控制字串，在脫離
字元之後即為 ANSI 的選擇性參數與命令字元，表 2.0.2.0 詳列了標準 ANSI 及
部份 NANSI.SYS (ANSI X3.64) 所支援的 ANSI 控制碼。


    表 2.0.2.0、ANSI 終端機視訊控制碼

     ※ 左側冠有 "★" 的是 NANSI 的命令
  ┌─────┬──────────────────────────────┐
  │ 命令內容 │	描					 述	    │
  ├─────┼──────────────────────────────┤
  │ESC[y;xH  │將游標位置移至 y,x，x,y 值以 1 為基底，內定值為 1,1。	    │
  │ESC[nA    │游標往上移動 n 列，內定值為 1。 			    │
  │ESC[nB    │游標往下移動 n 列，內定值為 1。 			    │
  │ESC[nC    │游標往右移動 n 個字元，內定值為 1。			    │
  │ESC[nD    │游標往左移動 n 個字元，內定值為 1。			    │
  │ESC[y;xf  │將游標位置移至 y,x，此碼較少利用到。			    │
  │ESC[y;xR  │報告游標目前位置，一組游標位置字串將被推入鍵盤緩衝區。	    │
  │ESC[6n    │設備狀態報告 (游標位置) 。				    │
  │ESC[s     │儲存目前游標位置。					    │
  │ESC[u     │還原上次儲存的游標位置。				    │
  │ESC[2J    │清除螢幕，游標將被移至螢幕左上角。			    │
  │ESC[K     │由游標位置清除至列末。					    │
  ├─────┼──────────────────────────────┤
★│ESC[nL    │於游標所在列插入 n 道空白列。				    │
★│ESC[nM    │刪除包含游標所在列共 n 列。				    │
★│ESC[n@    │於游標所在插入 n 個空白。				    │
★│ESC[nP    │刪除包含游標所在共 n 個空白。				    │
  ├─────┼──────────────────────────────┤
★│ESC[n;my  │輸出字元轉譯，於輸出時，所有字元 n 將被轉換為字元 m，	    │
  │	      │若未給定任何參數，則所有字元的轉譯表將被重設為原初狀態。    │
  ├─────┼──────────────────────────────┤
  │ESC["str"p│重新定義按鍵值，str 的第一個字元是欲重新定義的按鍵，其後的  │
  │	      │字串是該按鍵的新值，不常用到。				    │
  ├─────┼──────────────────────────────┤
  │ESC[n;n;  │設定字元屬性 (顏色) ，此命令可設定字元的前景與背景顏色，可  │
  │  ...;nm  │一次附加數個參數，這些參數的作用具累積性，命令中的 n 是底下 │
  │	      │的數字之一，注意! 這些顏色值與 IBM PC 的屬性值不完全相同。  │
  │	      ├─┬───────┬─┬───────┬─┬────────┤
  │	      │0 │關閉所有屬性  │4 │加底線	      │8 │不可見	    │
  │	      │1 │粗體	  │5 │閃爍	      │  │		    │
  │	      │2 │暗淡	  │7 │反轉	      │  │		    │
  │	      ├─┴───────┴─┴──┬────┴─┴────────┤
  │	      │	 前    景	    │		 背    景	    │
  │	      ├─┬─────┬─┬────┼─┬─────┬─┬─────┤
  │	      │30│黑	      │34│藍	    │40│黑	    │44│藍	    │
  │	      │31│紅	      │35│紫紅    │41│紅	    │45│紫紅	    │
  │	      │32│綠	      │36│深藍    │42│綠	    │46│深藍	    │
  │	      │33│黃	      │37│白	    │43│黃	    │47│白	    │
  ├─────┼─┴─────┴─┴────┴─┴─────┴─┴─────┤
  │ESC[=nh   │設定螢幕顯示模式					    │
  │ESC[=nl   │重設螢幕顯示模式					    │
  │	      ├──────────────────────────────┤
  │	      │螢幕顯示模式與 IBM BIOS 的模式值相似，見下表。		    │
  │	      ├─┬───────────┬─┬──────────────┤
  │	      │ 0│文字 40x25 黑白	  │ 6│影像 640x200 1 位元/點	    │
  │	      │ 1│文字 40x25 彩色	  │ 7│cursor wrap		    │
  │	      │ 2│文字 80x25 黑白	  │13│影像 320x200 4 位元/點 (EGA)│
  │	      │ 3│文字 80x25 彩色	  │14│影像 640x200 4 位元/點 (EGA)│
  │	      │ 4│影像 320x200 4 位元/點│16│影像 640x350 4 位元/點 (EGA)│
  │	      │ 5│影像 320x200 1 位元/點│  │			    │
  └─────┴─┴───────────┴─┴──────────────┘


2.0.3、ANSI 功能鍵字串

    標準的 ANSI 視訊控制碼除了提供控制螢幕狀態的規格外，並未制定
特殊功能鍵的 ANSI 字碼，除了透過 ANSI 視訊控制碼改變對方的視訊
狀態外，為了能夠接收對方所鍵入的功能鍵，即得額外制定一種 ANSI 的
按鍵碼標準，這項功能是選擇性的。
    通常，一些大型電腦系統或 BBS 皆會支援使用者所傳來的 ANSI 功能鍵
字碼，當然，使用者終端機模擬程式也得具備此功能，這些終端機模擬程式
支援 ANSI 功能鍵字碼的方法大抵不外乎將使用者所鍵入的功能鍵轉換成
一串對應的功能鍵字串、並送至彼端，這個轉換的過程稱為功能鍵碼的
轉譯，通訊的彼端則將所接收的 ANSI 功能鍵字碼轉譯為它所能接受的
按鍵碼。
    僅少數幾個功能鍵有對應的 ANSI 功能鍵字碼，請參考表 2.0.3.0，
其中，F1 至 F10、Shift-F1 至 Shift-F10 截取了 VT100 的功能鍵所
對應的字碼，而四個方向鍵則直接取 ANSI 本身視訊控制碼中的四個游標
移動命令，所有的功能鍵字碼也以 ESC 作為引導字元。
    讀者須特別注意，並不是所有的系統都接受 ANSI 功能鍵字碼。


    表 2.0.3.0、ANSI 功能鍵字碼與功能鍵名稱一覽
    ┌──────┬─────┬───────┬────────┐
    │IBM 按鍵名稱│IBM 掃瞄碼│VT100 按鍵名稱│ANSI 功能鍵字碼 │
    ├──────┼─────┼───────┼────────┤
    │F1	  │  3B00H   │PF1	      │ESC OP		│
    │F2	  │  3C00H   │PF2	      │ESC OQ		│
    │F3	  │  3D00H   │keypad '7'    │ESC Ow		│
    │F4	  │  3E00H   │keypad '8'    │ESC Ox		│
    │F5	  │  3F00H   │keypad '4'    │ESC Ot		│
    │F6	  │  4000H   │keypad '5'    │ESC Ou		│
    │F7	  │  4100H   │keypad '1'    │ESC Oq		│
    │F8	  │  4200H   │keypad '2'    │ESC Or		│
    │F9	  │  4300H   │keypad '0'    │ESC Op		│
    │F10	  │  4400H   │keypad '0'    │ESC Op		│
    │Up Arrow	  │  4800H   │Up Arrow      │ESC [A		│
    │Left Arrow  │  4B00H   │Left Arrow    │ESC [D		│
    │Right Arrow │  4D00H   │Right Arrow   │ESC [C		│
    │Down Arrow  │  5000H   │Down Arrow    │ESC [B		│
    │Shift-F1	  │  5400H   │PF3	      │ESC OR		│
    │Shift-F2	  │  5500H   │PF4	      │ESC OS		│
    │Shift-F3	  │  5600H   │keypad '9'    │ESC Oy		│
    │Shift-F4	  │  5700H   │keypad '-'    │ESC Om		│
    │Shift-F5	  │  5800H   │keypad '6'    │ESC Ov		│
    │Shift-F6	  │  5900H   │keypad ','    │ESC Ol		│
    │Shift-F7	  │  5A00H   │keypad '3'    │ESC Os		│
    │Shift-F8	  │  5B00H   │keypad 'Enter'│ESC OM		│
    │Shift-F9	  │  5C00H   │keypad '.'    │ESC On		│
    │Shift-F10   │  5D00H   │keypad 'Enter'│ESC OM		│
    └──────┴─────┴───────┴────────┘
